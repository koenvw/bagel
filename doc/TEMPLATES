The Templates
-------------
//ERb
Templates are made from ERb; Embedded Ruby. ERb allows you to put Ruby code inside an HTML file.
When ERb hits the Ruby instructions, it executes them. Depending on what youï¿½ve asked for, 
it either moves on or prints out the results of executing the instructions.
ERb reads along, word for word, and then at a certain point (when it sees the
Ruby code embedded in the document) it sees that it has to fill in a blank, which
it does by executing the Ruby code.
You need to know only two things to prepare an ERb document:
-  If you want some Ruby code executed, enclose it between <% and %>.
-  If you want the result of the code execution to be printed out, as part of the
output, enclose the code between <%= and %>.

sample: 
<html>
 <body>
 <% if session[:user].authorized? do %>
 Welcome <%= session[:user].firstname %>
 <% end %>
 </body>
</html>

// Code
Templates code can come from 3 sources:
- Ruby itself (documented: http://www.ruby-doc.org/core/)
	Classes
		Date
	Conditional Execution
	Loops
	Case expressions
- Rails Framework (documented: http://api.rubyonrails.org/)
    ActiveRecord
    
- Benzine Language (BSL)



The SiteItems
-------------
These are the ContentTypes within the system

- News
- Page
- Layout
- Block
- Article

General Properties
- is_menu
- created_on
- update_on
- parent


Specific Properties
- News:
	title
	body
- Page:
	title
	body


The Controller
--------------
The Controller is the class that compiles the templates. The templates can access all controller methods

//Controller Properties

controller.env["REMOTE_HOST"]
controller.cookies[]
controller.session[]
controller.login
controller.email

//Controller.methods

controller.render_tpl(<sitem)

This renders the template for a specific sitem. Because every Sitem has a generator, render_tpl will 
loop up the template and render it.

<% News.find(:all).reverse_each do |@item| %>
<%= controller.render_tpl(@item) %>
<% end %>

// Controller URLs

*The Root Url : /

This will render the default layout

*The Content URL

/content/:type/:id
eg. /content/news/3
/content/:type/:sitem_name
eg. /content/news/



// Caching:



