<%
params[:sub_id]=params[:sub_id].to_s
r_sub_type ||= params[:r_sub_type] # in case r_sub_type comes from paging

searchphrase = params[:search] || ""

lsp = "%" + searchphrase + "%"
unless r_sub_type.nil?
  #tag_id = Tag.find_by_name(r_sub_type).id
  conditions = " type LIKE \'Picture%\' AND parent_id is null" # ["(title LIKE ? OR filename LIKE ? or description LIKE ?) AND tag_id = ?", lsp, lsp, lsp,tag_id]
  joins = nil # "INNER JOIN sobjects_tags CA ON CA.tag_id = #{tag_id} AND sobjects.id = CA.sobject_id"
else
	r_sub_type=""
  conditions = ["title LIKE ? OR filename LIKE ? or description LIKE ? and parent_id is null AND type LIKE \'Picture%\'", lsp, lsp, lsp]
  joins = nil
  end
# Skip thumbnails
	condition_string = 'type LIKE \'Picture%\' AND parent_id IS NULL' 

@media_item_pages, @media_items = controller.paginate_collection MediaItem.find(:all, :conditions => condition_string),
														  :per_page   => 20,
														  :order	  => "media_items.updated_on DESC",
														  :include	=> :sobject 

r_type='media_item'
%>

<div class="headerinf">results: <%= @media_item_pages.item_count %> - page <%= @media_item_pages.current.number %>/<%= @media_item_pages.length %></div>

<table class="imgTable">
<tr>
<%
	for @media_item in @media_items
	id=params['id'] if id.nil?
	id = id.strip
%>
<td class="imgContainer">
  <% @media_item.after_initialize #FIXME: this call is needed because @image "forgot" to do it ? %>
  <%= link_to_remote image_tag(@media_item.public_filename(Setting.get("ImageSettings")[:default2].to_sym), :border=>0, :alt=> @media_item.public_filename),
		 :url => "/admin/relations/add/#{@media_item.sobject.id}?cat_id=#{id}sub_id=#{params[:sub_id]}&direction=#{params[:direction]}",
		:loading => "Element.show('spinner_relations_search')",
		:complete => "Element.hide('spinner_relations_search'); relVisualAction();", 
		:position => :top
	%>
	<br><small><%= truncate(@media_item.public_filename, 12) %></small>
</td>
<% end %>
</tr>
</table>

<% @item=@media_item_pages %>

<% url = "/admin/relations/sub_content_#{r_type}?id=#{id}&search=#{searchphrase}&sub_id=#{params[:sub_id]}&r_sub_type=#{r_sub_type}&direction=#{params[:direction]}" %>
<!-- FIRST -->
<%= link_to_remote image_tag('arrow_left',:border=>0,:alt=> "first", :plugin => "bagel"),
				   :update=>"relations#{params[:sub_id]}_sub_content",
				   :url => url + '&page='+@item.first.number.to_s %>
<!-- PREVIOUS -->
<% if @item.current.previous %>
  <%= link_to_remote image_tag('arrow_left_green.png', :border=>0,:alt=> "next", :plugin => "bagel"),
					 :update=>"relations#{params[:sub_id]}_sub_content",
					 :url => url + '&page='+@item.current.previous.number.to_s %>
<% else %>
  <%= image_tag 'dot_clear.gif', :width=>16, :height=>16, :plugin => "bagel" %>
<% end %>
<!-- NEXT -->
<% if @item.current.next %>
  <%= link_to_remote image_tag('arrow_right_green.png', :border=>0,:alt=> "previous", :plugin => "bagel"),
					:update=>"relations#{params[:sub_id]}_sub_content",
					:url => url + '&page='+@item.current.next.number.to_s %>
<% else %>
  <%= image_tag 'dot_clear.gif', :width=>16, :height=>16, :plugin => "bagel" %>
<% end %>
<!-- LAST -->
<%= link_to_remote image_tag('arrow_right.png', :border=>0,:alt=> "last", :plugin => "bagel"),
				   :update=>"relations#{params[:sub_id]}_sub_content",
				   :url => url + '&page='+@item.last.number.to_s %>

