unless params[:id].nil? 
  obj = Sobject.find(params[:id])
  uniq_id = params[:uniq_id]
  editor_id = params[:editor_id]
  direction = params[:direction]
  relations = obj.relations_as_from.find(:all,:order => 'position,relation_id').sort
  page.replace_html "relations_sorted_in#{params[:sub_id]}list",""
  relations.each do |relation| 
    page.insert_html :bottom, "relations_sorted_in#{params[:sub_id]}list", :partial => "admin/relations/list_item", :locals => { 
    :to_sobject_id=> relation.to_sobject_id, :relation_id=> relation.relation_id, :uniq_id => uniq_id, :editor_id => editor_id, :direction => "in"} 
  end
  # FIXME: isn't there a helper for this ?
  page << "Sortable.create(\"relations_sorted_inlist\", {handle:'dragme', onChange:function(){$('relations').value = Sortable.sequence(\"relations_sorted_inlist\")}, onUpdate:function(){new Ajax.Request('', {asynchronous:true, evalScripts:true, parameters:Sortable.serialize(\"relations_sorted_inlist\")})}, only:'draggable'})"
  # update hidden form field
  page << "$('relations').value = Sortable.sequence(\"relations_sorted_inlist\")" 

end
