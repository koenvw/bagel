<%

# To add new external types:
# 
# 1. Update the external select menu in app/views/admin/relations/edit.rhtml
# 2. Create a sub_content_XYZ.rhtml file with XYZ the external type (like 'flickr')
# 3. Do the display stuff in sub_content_XYZ.rhtml
# 4. If necessary, create an add_XYZ.rjs file which creates the necessary imported object
# 
# This should be it... hope I didn't miss anything.

if params['rel_id'].to_i > 0
  relation = Relation.find(params['rel_id'].to_i)

  if relation.is_external

%>

<fieldset class="search">
	<label for="relations">Search:</label>
	<input type="text" value="(cannot search flickr images)" disabled="disabled" /> <!-- sorry, but search doesn't work for flickr images -->
</fieldset>
<div class="spinner" id="spinner_relations_search" style="display: none;"></div>
<%= observe_field "sub_search",
      :frequency => 0.5,
      :update    => "relations_sub_content",
      :url       => { :controller => "relations", :action => "sub_content_#{relation.external_type}", :id => params['rel_id'] },
      :loading   => "Element.show('spinner_relations_search')",
      :complete  => "Element.hide('spinner_relations_search')",
      :with      => "'search=' + value"
%>
<div class="relContent" id="relations_sub_content">
	<%= render :file => "/admin/relations/sub_content_#{relation.external_type}", :locals => { :id => params['rel_id'] } %>
</div>

<%

  else
    content_type = relation.content_type
    r_type = content_type.core_content_type.downcase
    r_type_id = content_type.id
    r_sub_type = (content_type.extra_info.size == 0) ? nil : content_type.extra_info

%>

<fieldset class="search">
	<label for="relations">Search:</label>
	<input id="sub_search" name="sub_search" type="text" value="">
</fieldset>
<div class="spinner" id="spinner_relations_search" style="display: none;"></div>
<% 
 case r_type
  when "image", "mediaitem","menu" # these require special handling
    action = "sub_content_#{r_type}"
  else
    action = "sub_content"
  end
%>
<%= observe_field "sub_search",
        :frequency => 0.5,
        :update    => "relations_sub_content",
        :url       => {:controller => "relations", :action => action, :rel_id => params[:rel_id]},
        :loading  => "Element.show('spinner_relations_search')",
        :complete => "Element.hide('spinner_relations_search')",
        :with     => "'sub_search=' + value"
%>
<div class="relContent" id="relations_sub_content">
    <%= render :file => "/admin/relations/#{action}", :locals=>{} %>
</div>

<% end %>

<% else %>
	select a category!
<% end %>
